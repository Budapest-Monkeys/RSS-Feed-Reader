{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getWeekOfMonth;\n\nvar _index = _interopRequireDefault(require(\"../getDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../getDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfMonth/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6 inclusively\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\n\nfunction getWeekOfMonth(date, options) {\n  var _options$locale, _options$locale$optio;\n\n  (0, _index4.default)(1, arguments);\n  var defaultWeekStartsOn = (options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) || 0;\n  var weekStartsOn = (options === null || options === void 0 ? void 0 : options.weekStartsOn) == null ? (0, _index5.default)(defaultWeekStartsOn) : (0, _index5.default)(options.weekStartsOn);\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = (0, _index.default)(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  var startWeekDay = (0, _index2.default)((0, _index3.default)(date));\n  var lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/Flor Hernandez/node_modules/date-fns/getWeekOfMonth/index.js"],"names":["Object","defineProperty","exports","value","default","getWeekOfMonth","_index","_interopRequireDefault","require","_index2","_index3","_index4","_index5","obj","__esModule","date","options","_options$locale","_options$locale$optio","arguments","defaultWeekStartsOn","locale","weekStartsOn","RangeError","currentDayOfMonth","isNaN","NaN","startWeekDay","lastDayOfFirstWeek","remainingDaysAfterFirstWeek","Math","ceil","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getWeekOfMonth;\n\nvar _index = _interopRequireDefault(require(\"../getDate/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../getDay/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../startOfMonth/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../_lib/toInteger/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6 inclusively\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\nfunction getWeekOfMonth(date, options) {\n  var _options$locale, _options$locale$optio;\n\n  (0, _index4.default)(1, arguments);\n  var defaultWeekStartsOn = (options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) || 0;\n  var weekStartsOn = (options === null || options === void 0 ? void 0 : options.weekStartsOn) == null ? (0, _index5.default)(defaultWeekStartsOn) : (0, _index5.default)(options.weekStartsOn);\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = (0, _index.default)(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  var startWeekDay = (0, _index2.default)((0, _index3.default)(date));\n  var lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}