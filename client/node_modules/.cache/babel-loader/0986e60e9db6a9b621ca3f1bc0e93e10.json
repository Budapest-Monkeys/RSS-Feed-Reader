{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flor Hernandez\\\\RSS-Feed-Reader\\\\client\\\\src\\\\Pages\\\\Feed.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport './/Feed.css';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [backEndData, setBackEndData] = useState([{}]);\n  const [rssUrl, setRssUrl] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  const getRss = async e => {\n    e.preventDefault();\n    const urlRegex = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\n\n    if (!urlRegex.test(rssUrl)) {\n      return;\n    }\n\n    const res = await fetch(`https://api.allorigins.win/get?url=${rssUrl}`);\n    const {\n      contents\n    } = await res.json();\n    const feed = new window.DOMParser().parseFromString(contents, \"text/xml\");\n    const items = feed.querySelectorAll(\"item\");\n    const feedItems = [...items].map(el => ({\n      link: el.querySelector(\"link\").innerHTML,\n      title: el.querySelector(\"title\").innerHTML,\n      author: el.querySelector(\"author\").innerHTML\n    }));\n    setItems(feedItems);\n  }; //const [initialized, setInitialized] = useState(false);\n  //const [url, setUrl] = useState(\"\");\n  //const [listings, setListings] = useState([]);\n  //const [data, setData] = useState({});\n  //const  querystring = require(\"querystring\");\n\n  /*const getListings = async url => {\r\n      try {\r\n        const response = await getFeedListing(url);\r\n        setListings(response.data.items);\r\n        setData(response.data.feed);\r\n      } catch (ex) {\r\n        console.log(ex);\r\n      }\r\n    };\r\n  \r\n  const openLink = url => {\r\n      window.location.href = url;\r\n  };\r\n  \r\n  useEffect(() => {\r\n      if (!initialized) {\r\n        const url = querystring.decode(location.search)[\"?url\"];\r\n        setUrl(url);\r\n        getListings(url);\r\n        setInitialized(true);\r\n      }\r\n    });\r\n  \n  */\n\n\n  const context = useContext(ThemeContext);\n  const theme = context.isLightTheme ? context.light : context.dark;\n  const theme2 = context.isLightTheme ? context.cardLight : context.cardDark;\n  const theme3 = context.isLightTheme ? context.pageLight : context.pageDark;\n\n  const ThemeToggler = props => {\n    _s();\n\n    const context = useContext(ThemeContext);\n    const btnText = context.isLightTheme ? \"Light ☀️\" : \"Dark 🌘\";\n    const toggleTheme = context.toggleTheme;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `button is-light rounded`,\n      onClick: toggleTheme,\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(ThemeToggler, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n  useEffect(() => {\n    // A proxy was define in package.json so we dont need to put the full route. This will be changed in production\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      setBackEndData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Feed ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `nav ${theme2}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [\"RSS-Feed\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            id: \"home-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/feed\",\n            id: \"feed-link\",\n            children: \"Feed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 18\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${theme3}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: theme3,\n        children: /*#__PURE__*/_jsxDEV(ThemeToggler, {\n          className: \"themeBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: getRss,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" rss url\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setRssUrl(e.target.value),\n            value: rssUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), items.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.link,\n            children: item.link\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(Feed, \"9vt+RFb3z8XLKFEsAhbDERIzCQg=\");\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/Pages/Feed.js"],"names":["React","useEffect","useState","useContext","ThemeContext","Footer","Feed","backEndData","setBackEndData","rssUrl","setRssUrl","items","setItems","getRss","e","preventDefault","urlRegex","test","res","fetch","contents","json","feed","window","DOMParser","parseFromString","querySelectorAll","feedItems","map","el","link","querySelector","innerHTML","title","author","context","theme","isLightTheme","light","dark","theme2","cardLight","cardDark","theme3","pageLight","pageDark","ThemeToggler","props","btnText","toggleTheme","then","response","data","target","value","item"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, useContext } from 'react';\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport './/Feed.css'\r\nimport Footer from './Footer'\r\n\r\n\r\n\r\n\r\n\r\nfunction Feed () {\r\n    const [backEndData, setBackEndData] = useState([{}]);\r\n    const [rssUrl, setRssUrl] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n  \r\n    const getRss = async (e) => {\r\n        e.preventDefault();\r\n        const urlRegex = /(http|ftp|https):\\/\\/[\\w-]+(\\.[\\w-]+)+([\\w.,@?^=%&amp;:\\/~+#-]*[\\w@?^=%&amp;\\/~+#-])?/;\r\n        if (!urlRegex.test(rssUrl)) {\r\n          return;\r\n        }\r\n    \r\n    const res = await fetch(`https://api.allorigins.win/get?url=${rssUrl}`);\r\n    const { contents } = await res.json();\r\n    const feed = new window.DOMParser().parseFromString(contents, \"text/xml\");\r\n    const items = feed.querySelectorAll(\"item\");\r\n    const feedItems = [...items].map((el) => ({\r\n          link: el.querySelector(\"link\").innerHTML,\r\n          title: el.querySelector(\"title\").innerHTML,\r\n          author: el.querySelector(\"author\").innerHTML\r\n    }));\r\n    setItems(feedItems);\r\n    };\r\n\r\n    //const [initialized, setInitialized] = useState(false);\r\n    //const [url, setUrl] = useState(\"\");\r\n    //const [listings, setListings] = useState([]);\r\n    //const [data, setData] = useState({});\r\n    //const  querystring = require(\"querystring\");\r\n    /*const getListings = async url => {\r\n        try {\r\n          const response = await getFeedListing(url);\r\n          setListings(response.data.items);\r\n          setData(response.data.feed);\r\n        } catch (ex) {\r\n          console.log(ex);\r\n        }\r\n      };\r\n    \r\n    const openLink = url => {\r\n        window.location.href = url;\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (!initialized) {\r\n          const url = querystring.decode(location.search)[\"?url\"];\r\n          setUrl(url);\r\n          getListings(url);\r\n          setInitialized(true);\r\n        }\r\n      });\r\n   \r\n   */\r\n      \r\n\r\n    const context = useContext(ThemeContext);\r\n    const theme = context.isLightTheme ? context.light : context.dark;\r\n    const theme2 = context.isLightTheme ? context.cardLight : context.cardDark;\r\n    const theme3 = context.isLightTheme ? context.pageLight : context.pageDark;\r\n\r\n    const ThemeToggler = (props) => {\r\n      const context = useContext(ThemeContext);\r\n      const btnText = context.isLightTheme ? \"Light ☀️\" : \"Dark 🌘\";\r\n      const toggleTheme = context.toggleTheme;\r\n      \r\n    \r\n      return (\r\n        <button className={`button is-light rounded`} onClick={toggleTheme}>\r\n          {btnText}\r\n        </button>\r\n      );\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n      // A proxy was define in package.json so we dont need to put the full route. This will be changed in production\r\n      fetch(\"/api\").then(\r\n        response => response.json()\r\n      ).then(\r\n        data => {\r\n          setBackEndData(data)\r\n        }\r\n      )\r\n    }, [])\r\n    \r\n    return (\r\n        \r\n         <div className= {`Feed ${theme}` }>\r\n         <div className={`nav ${theme2}`}>\r\n          <div className=\"logo\">RSS-Feed<span>.</span></div> \r\n          \r\n          <ul>\r\n            <li> <a href =\"/\" id = \"home-link\" >\r\n                         Home\r\n                       </a> </li>\r\n            <li> <a href =\"/feed\" id = \"feed-link\" >\r\n                         Feed\r\n                       </a> </li>\r\n           \r\n          </ul>\r\n          </div>\r\n       \r\n          <div className={`${theme3}`}>\r\n          <div className={theme3}>\r\n          <ThemeToggler className=\"themeBtn\"/>  \r\n          </div> \r\n          <form onSubmit={getRss}>\r\n        <div>\r\n          <label> rss url</label>\r\n          <br />\r\n          <input onChange={(e) => setRssUrl(e.target.value)} value={rssUrl} />\r\n        </div>\r\n        <input type=\"submit\" />\r\n      </form>\r\n      {items.map((item) => {\r\n        return (\r\n          <div>\r\n            <h1>{item.title}</h1>\r\n            <p>{item.author}</p>\r\n            <a href={item.link}>{item.link}</a>\r\n          </div>\r\n        );\r\n      })}\r\n          \r\n       \r\n       </div>\r\n        <Footer/>\r\n       </div>\r\n       \r\n\r\n    );\r\n}\r\n\r\nexport default Feed;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}