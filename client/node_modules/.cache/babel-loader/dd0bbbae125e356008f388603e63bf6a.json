{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flor Hernandez\\\\RSS-Feed-Reader\\\\client\\\\src\\\\Pages\\\\SearchPage.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport './/SearchPage.css';\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport { observer } from \"mobx-react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst querystring = require(\"querystring\");\n\nconst schema = yup.object({\n  name: yup.string().required(\"URL is required\"),\n  url: yup.string().required(\"URL is required\").matches(/(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/, \"Invalid URL\")\n});\n\nfunction SearchPage(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    feedsStore\n  } = _ref;\n  const [initialized, setInitialized] = useState(false);\n  const [redirectToFeed, setRedirectToFeed] = useState(false);\n  const context = useContext(ThemeContext);\n  const theme = context.isLightTheme ? context.light : context.dark;\n  const theme2 = context.isLightTheme ? context.cardLight : context.cardDark;\n\n  const ThemeToggler = props => {\n    _s();\n\n    const context = useContext(ThemeContext);\n    const btnText = context.isLightTheme ? \"Light ☀️\" : \"Dark 🌘\";\n    const toggleTheme = context.toggleTheme;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `button is-light rounded`,\n      onClick: toggleTheme,\n      children: btnText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(ThemeToggler, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      return;\n    }\n\n    feedsStore.feeds.push(evt);\n    feedsStore.setFeeds(feedsStore.feeds);\n    localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\n  };\n\n  const setSelectedFeed = url => {\n    feedsStore.setSelectedFeed(url);\n    setRedirectToFeed(true);\n  };\n\n  const deleteFeed = index => {\n    feedsStore.feeds.splice(index, 1);\n    feedsStore.setFeeds(feedsStore.feeds);\n    localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\n  };\n\n  useEffect(() => {\n    if (!initialized) {\n      let rssFeeds = [];\n\n      try {\n        rssFeeds = JSON.parse(localStorage.getItem(\"feeds\"));\n\n        if (Array.isArray(rssFeeds)) {\n          feedsStore.setFeeds(rssFeeds);\n        }\n      } catch (ex) {}\n\n      setInitialized(true);\n    }\n  });\n\n  if (redirectToFeed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/feed?${querystring.encode({\n        url: feedsStore.feed\n      })}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Search ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `nav ${theme2}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [\"RSS-Feed\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            id: \"home-link\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/searchP\",\n            id: \"search-link\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThemeToggler, {\n      className: \"themeBtn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `search-page ${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        validationSchema: schema,\n        onSubmit: handleSubmit,\n        children: _ref2 => {\n          let {\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            touched,\n            isInvalid,\n            errors\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"12\",\n                controlId: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: \"Name\",\n                  value: values.name || \"\",\n                  onChange: handleChange,\n                  isInvalid: touched.name && errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                md: \"12\",\n                controlId: \"url\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"url\",\n                  placeholder: \"URL\",\n                  value: values.url || \"\",\n                  onChange: handleChange,\n                  isInvalid: touched.url && errors.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                  type: \"invalid\",\n                  children: errors.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"info\",\n              class: \"btn btn-info\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), feedsStore.feeds.map((f, i) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            className: \"card-title\",\n            children: f.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: f.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              onClick: setSelectedFeed.bind(this, f.url),\n              children: \"Open\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"info\",\n              onClick: deleteFeed.bind(this, i),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n} //export default SearchPage;\n\n\n_s2(SearchPage, \"I+/6rqYPS6me7aX9OUWJ4Poyafg=\");\n\n_c = SearchPage;\nexport default _c2 = observer(SearchPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/Pages/SearchPage.js"],"names":["React","useState","useEffect","useContext","ThemeContext","observer","Card","Formik","Form","Col","Button","yup","Redirect","Footer","querystring","require","schema","object","name","string","required","url","matches","SearchPage","feedsStore","initialized","setInitialized","redirectToFeed","setRedirectToFeed","context","theme","isLightTheme","light","dark","theme2","cardLight","cardDark","ThemeToggler","props","btnText","toggleTheme","handleSubmit","evt","isValid","validate","feeds","push","setFeeds","localStorage","setItem","JSON","stringify","setSelectedFeed","deleteFeed","index","splice","rssFeeds","parse","getItem","Array","isArray","ex","encode","feed","handleChange","handleBlur","values","touched","isInvalid","errors","map","f","i","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport './/SearchPage.css'\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Footer from './Footer'\r\nconst querystring = require(\"querystring\");\r\n\r\nconst schema = yup.object({\r\n    name: yup.string().required(\"URL is required\"),\r\n    url: yup\r\n      .string()\r\n      .required(\"URL is required\")\r\n      .matches(\r\n        /(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/,\r\n        \"Invalid URL\"\r\n      ),\r\n  });\r\n  \r\nfunction SearchPage({ feedsStore }) {\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [redirectToFeed, setRedirectToFeed] = useState(false);\r\n\r\n    const context = useContext(ThemeContext);\r\n    const theme = context.isLightTheme ? context.light : context.dark;\r\n    const theme2 = context.isLightTheme ? context.cardLight : context.cardDark;\r\n\r\n\r\n    const ThemeToggler = (props) => {\r\n      const context = useContext(ThemeContext);\r\n      const btnText = context.isLightTheme ? \"Light ☀️\" : \"Dark 🌘\";\r\n      const toggleTheme = context.toggleTheme;\r\n      \r\n    \r\n      return (\r\n        <button className={`button is-light rounded`} onClick={toggleTheme}>\r\n          {btnText}\r\n        </button>\r\n      );\r\n    };\r\n  \r\n    const handleSubmit = async evt => {\r\n      const isValid = await schema.validate(evt);\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n      feedsStore.feeds.push(evt);\r\n      feedsStore.setFeeds(feedsStore.feeds);\r\n      localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\r\n    };\r\n  \r\n    const setSelectedFeed = url => {\r\n        feedsStore.setSelectedFeed(url);\r\n      setRedirectToFeed(true);\r\n    };\r\n  \r\n    const deleteFeed = index => {\r\n      feedsStore.feeds.splice(index, 1);\r\n      feedsStore.setFeeds(feedsStore.feeds);\r\n      localStorage.setItem(\"feeds\", JSON.stringify(feedsStore.feeds));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (!initialized) {\r\n        let rssFeeds = [];\r\n        try {\r\n          rssFeeds = JSON.parse(localStorage.getItem(\"feeds\"));\r\n          if (Array.isArray(rssFeeds)) {\r\n            feedsStore.setFeeds(rssFeeds);\r\n          }\r\n        } catch (ex) {}\r\n        setInitialized(true);\r\n      }\r\n    });\r\n  \r\n    if (redirectToFeed) {\r\n      return (\r\n        <Redirect to={`/feed?${querystring.encode({ url: feedsStore.feed })}`} />\r\n      );\r\n    }\r\n  \r\n    return (\r\n\r\n        <div className= {`Search ${theme}` }>\r\n        <div className={`nav ${theme2}`}>\r\n         <div className=\"logo\">RSS-Feed<span>.</span></div> \r\n         \r\n         <ul>\r\n           <li> <a href =\"/\" id = \"home-link\" >\r\n                        Home\r\n                      </a> </li>\r\n            \r\n           <li> <a href =\"/searchP\" id = \"search-link\" >\r\n                        Search\r\n                       </a> </li>         \r\n          \r\n         </ul>\r\n         </div>\r\n         <ThemeToggler className=\"themeBtn\"/>  \r\n         <div className= {`search-page ${theme}` }>\r\n         <Formik validationSchema={schema} onSubmit={handleSubmit}>\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          values,\r\n          touched,\r\n          isInvalid,\r\n          errors,\r\n        }) => (\r\n          <Form noValidate onSubmit={handleSubmit}>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  value={values.name || \"\"}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.name && errors.name}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.name}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"12\" controlId=\"url\">\r\n                <Form.Label>URL</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"url\"\r\n                  placeholder=\"URL\"\r\n                  value={values.url || \"\"}\r\n                  onChange={handleChange}\r\n                  isInvalid={touched.url && errors.url}\r\n                />\r\n\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.url}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Form.Row>\r\n            <Button type=\"submit\" variant=\"info\" class=\"btn btn-info\">Add</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n      <br />\r\n      {feedsStore.feeds.map((f, i) => {\r\n        return (\r\n            <Card key={i}>\r\n              <Card.Title className=\"card-title\">{f.name}</Card.Title>\r\n              <Card.Body>\r\n                <p>{f.url}</p>\r\n                <Button\r\n                  variant=\"info\"\r\n                  onClick={setSelectedFeed.bind(this, f.url)}\r\n                >\r\n                  Open\r\n                </Button>{\" \"}\r\n                <Button variant=\"info\" onClick={deleteFeed.bind(this, i)}>\r\n                  Delete\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          );\r\n      })}\r\n    </div>\r\n    \r\n      <Footer/>\r\n     </div>\r\n    );\r\n  }\r\n\r\n//export default SearchPage;\r\nexport default observer(SearchPage);"]},"metadata":{},"sourceType":"module"}