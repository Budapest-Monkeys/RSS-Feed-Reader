{"ast":null,"code":"var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\r\n * This method is like `_.cloneWith` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.cloneWith\r\n * @example\r\n *\r\n * function customizer(value) {\r\n *   if (_.isElement(value)) {\r\n *     return value.cloneNode(true);\r\n *   }\r\n * }\r\n *\r\n * var el = _.cloneDeepWith(document.body, customizer);\r\n *\r\n * console.log(el === document.body);\r\n * // => false\r\n * console.log(el.nodeName);\r\n * // => 'BODY'\r\n * console.log(el.childNodes.length);\r\n * // => 20\r\n */\n\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nmodule.exports = cloneDeepWith;","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/node_modules/lodash/cloneDeepWith.js"],"names":["baseClone","require","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeepWith","value","customizer","undefined","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;AAEA;;;AACA,IAAIC,eAAe,GAAG,CAAtB;AAAA,IACIC,kBAAkB,GAAG,CADzB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,UAA9B,EAA0C;AACxCA,EAAAA,UAAU,GAAG,OAAOA,UAAP,IAAqB,UAArB,GAAkCA,UAAlC,GAA+CC,SAA5D;AACA,SAAOP,SAAS,CAACK,KAAD,EAAQH,eAAe,GAAGC,kBAA1B,EAA8CG,UAA9C,CAAhB;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBL,aAAjB","sourcesContent":["var baseClone = require('./_baseClone');\r\n\r\n/** Used to compose bitmasks for cloning. */\r\nvar CLONE_DEEP_FLAG = 1,\r\n    CLONE_SYMBOLS_FLAG = 4;\r\n\r\n/**\r\n * This method is like `_.cloneWith` except that it recursively clones `value`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Lang\r\n * @param {*} value The value to recursively clone.\r\n * @param {Function} [customizer] The function to customize cloning.\r\n * @returns {*} Returns the deep cloned value.\r\n * @see _.cloneWith\r\n * @example\r\n *\r\n * function customizer(value) {\r\n *   if (_.isElement(value)) {\r\n *     return value.cloneNode(true);\r\n *   }\r\n * }\r\n *\r\n * var el = _.cloneDeepWith(document.body, customizer);\r\n *\r\n * console.log(el === document.body);\r\n * // => false\r\n * console.log(el.nodeName);\r\n * // => 'BODY'\r\n * console.log(el.childNodes.length);\r\n * // => 20\r\n */\r\nfunction cloneDeepWith(value, customizer) {\r\n  customizer = typeof customizer == 'function' ? customizer : undefined;\r\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\r\n}\r\n\r\nmodule.exports = cloneDeepWith;\r\n"]},"metadata":{},"sourceType":"script"}