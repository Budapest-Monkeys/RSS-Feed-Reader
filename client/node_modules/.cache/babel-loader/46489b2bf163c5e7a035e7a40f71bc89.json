{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport './/SearchPage.css';\nimport { observer } from \"mobx-react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\n\nconst querystring = require(\"querystring\");\n\nconst schema = yup.object({\n  name: yup.string().required(\"URL is required\"),\n  url: yup.string().required(\"URL is required\").matches(/(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/, \"Invalid URL\")\n});","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/Pages/SearchPage.js"],"names":["React","useState","useEffect","observer","Card","Formik","Form","Col","Button","yup","Redirect","querystring","require","schema","object","name","string","required","url","matches"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,CAAW;AACtBC,EAAAA,IAAI,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,CAAsB,iBAAtB,CADgB;AAEtBC,EAAAA,GAAG,EAAET,GAAG,CACLO,MADE,GAEFC,QAFE,CAEO,iBAFP,EAGFE,OAHE,CAID,uFAJC,EAKD,aALC;AAFiB,CAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './/SearchPage.css'\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst querystring = require(\"querystring\");\r\n\r\nconst schema = yup.object({\r\n    name: yup.string().required(\"URL is required\"),\r\n    url: yup\r\n      .string()\r\n      .required(\"URL is required\")\r\n      .matches(\r\n        /(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/,\r\n        \"Invalid URL\"\r\n      ),\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}