{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\n\nvar _index = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../differenceInSeconds/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../locale/en-US/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../_lib/cloneObject/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nfunction formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _index8.default)(2, arguments);\n  var locale = options.locale || _index4.default;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = (0, _index6.default)(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = (0, _index5.default)(dirtyBaseDate);\n    dateRight = (0, _index5.default)(dirtyDate);\n  } else {\n    dateLeft = (0, _index5.default)(dirtyDate);\n    dateRight = (0, _index5.default)(dirtyBaseDate);\n  }\n\n  var seconds = (0, _index3.default)(dateRight, dateLeft);\n  var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = (0, _index2.default)(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}\n\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/Flor Hernandez/node_modules/date-fns/formatDistance/index.js"],"names":["Object","defineProperty","exports","value","default","formatDistance","_index","_interopRequireDefault","require","_index2","_index3","_index4","_index5","_index6","_index7","_index8","obj","__esModule","MINUTES_IN_DAY","MINUTES_IN_ALMOST_TWO_DAYS","MINUTES_IN_MONTH","MINUTES_IN_TWO_MONTHS","dirtyDate","dirtyBaseDate","options","arguments","length","undefined","locale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","dateLeft","dateRight","seconds","offsetInSeconds","minutes","Math","round","months","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","floor","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatDistance;\n\nvar _index = _interopRequireDefault(require(\"../compareAsc/index.js\"));\n\nvar _index2 = _interopRequireDefault(require(\"../differenceInMonths/index.js\"));\n\nvar _index3 = _interopRequireDefault(require(\"../differenceInSeconds/index.js\"));\n\nvar _index4 = _interopRequireDefault(require(\"../locale/en-US/index.js\"));\n\nvar _index5 = _interopRequireDefault(require(\"../toDate/index.js\"));\n\nvar _index6 = _interopRequireDefault(require(\"../_lib/cloneObject/index.js\"));\n\nvar _index7 = _interopRequireDefault(require(\"../_lib/getTimezoneOffsetInMilliseconds/index.js\"));\n\nvar _index8 = _interopRequireDefault(require(\"../_lib/requiredArgs/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nfunction formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  (0, _index8.default)(2, arguments);\n  var locale = options.locale || _index4.default;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = (0, _index.default)(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = (0, _index6.default)(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = (0, _index5.default)(dirtyBaseDate);\n    dateRight = (0, _index5.default)(dirtyDate);\n  } else {\n    dateLeft = (0, _index5.default)(dirtyDate);\n    dateRight = (0, _index5.default)(dirtyBaseDate);\n  }\n\n  var seconds = (0, _index3.default)(dateRight, dateLeft);\n  var offsetInSeconds = ((0, _index7.default)(dateRight) - (0, _index7.default)(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = (0, _index2.default)(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}\n\nmodule.exports = exports.default;"]},"metadata":{},"sourceType":"script"}