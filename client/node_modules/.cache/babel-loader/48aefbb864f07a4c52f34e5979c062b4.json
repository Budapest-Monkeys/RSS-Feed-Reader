{"ast":null,"code":"var _jsxFileName = \"D:\\\\CS4800\\\\CS4800 Project\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [backEndData, setBackEndData] = useState([{}]);\n  useEffect(() => {\n    // A proxy was define in package.json so we dont need to put the full route. This will be changed in production\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      setBackEndData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"wOLKM9nbXdnGoet086NM/G8t860=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/CS4800/CS4800 Project/client/src/App.js"],"names":["React","useEffect","useState","App","backEndData","setBackEndData","fetch","then","response","json","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,KAAK,CAAC,MAAD,CAAL,CAAcC,IAAd,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEEF,IAFF,CAGEG,IAAI,IAAI;AACNL,MAAAA,cAAc,CAACK,IAAD,CAAd;AACD,KALH;AAOD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnBQP,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nfunction App() {\n  const [backEndData, setBackEndData] = useState([{}])\n\n  useEffect(() => {\n    // A proxy was define in package.json so we dont need to put the full route. This will be changed in production\n    fetch(\"/api\").then(\n      response => response.json()\n    ).then(\n      data => {\n        setBackEndData(data)\n      }\n    )\n  }, [])\n\n  return (  \n    <div>\n      \n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}