{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flor Hernandez\\\\RSS-Feed-Reader\\\\client\\\\src\\\\Pages\\\\SearchPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './/SearchPage.css';\nimport { observer } from \"mobx-react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Formik } from \"formik\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport * as yup from \"yup\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst querystring = require(\"querystring\");\n\nconst schema = yup.object({\n  name: yup.string().required(\"URL is required\"),\n  url: yup.string().required(\"URL is required\").matches(/(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/, \"Invalid URL\")\n});\n\nfunction SearchPage(_ref) {\n  _s();\n\n  let {\n    searchsStore\n  } = _ref;\n  const [initialized, setInitialized] = useState(false);\n  const [redirectToSearch, setRedirectToSearch] = useState(false);\n\n  const handleSubmit = async evt => {\n    const isValid = await schema.validate(evt);\n\n    if (!isValid) {\n      return;\n    }\n\n    searchsStore.searchs.push(evt);\n    searchsStore.setSearchs(searchsStore.searchs);\n    localStorage.setItem(\"searchs\", JSON.stringify(searchsStore.searchs));\n  };\n\n  const setSelectedSearch = url => {\n    searchsStore.setSelectedSearch(url);\n    setRedirectToSearch(true);\n  };\n\n  const deleteSearch = index => {\n    searchsStore.searchs.splice(index, 1);\n    searchsStore.setSearchs(searchsStore.searchs);\n    localStorage.setItem(\"searchs\", JSON.stringify(searchsStore.searchs));\n  };\n\n  useEffect(() => {\n    if (!initialized) {\n      let rssSearchs = [];\n\n      try {\n        rssSearchs = JSON.parse(localStorage.getItem(\"searchs\"));\n\n        if (Array.isArray(rssSearchs)) {\n          searchsStore.setSearchs(rssSearchs);\n        }\n      } catch (ex) {}\n\n      setInitialized(true);\n    }\n  });\n\n  if (redirectToSearch) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/feed?${querystring.encode({\n        url: searchsStore.search\n      })}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"center\",\n      children: \"RSS Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      onSubmit: handleSubmit,\n      children: _ref2 => {\n        let {\n          handleSubmit,\n          handleChange,\n          handleBlur,\n          values,\n          touched,\n          isInvalid,\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Name\",\n                value: values.name || \"\",\n                onChange: handleChange,\n                isInvalid: touched.name && errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              md: \"12\",\n              controlId: \"url\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"url\",\n                placeholder: \"URL\",\n                value: values.url || \"\",\n                onChange: handleChange,\n                isInvalid: touched.url && errors.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), searchsStore.searchs.map((f, i) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title\",\n          children: f.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: f.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: setSelectedSearch.bind(this, f.url),\n            children: \"Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: deleteSearch.bind(this, i),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n} //export default SearchPage;\n\n\n_s(SearchPage, \"lkCVBBbipvUFtpeulKk6edgHPJI=\");\n\n_c = SearchPage;\nexport default _c2 = observer(SearchPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/Pages/SearchPage.js"],"names":["React","useState","useEffect","observer","Card","Formik","Form","Col","Button","yup","Redirect","querystring","require","schema","object","name","string","required","url","matches","SearchPage","searchsStore","initialized","setInitialized","redirectToSearch","setRedirectToSearch","handleSubmit","evt","isValid","validate","searchs","push","setSearchs","localStorage","setItem","JSON","stringify","setSelectedSearch","deleteSearch","index","splice","rssSearchs","parse","getItem","Array","isArray","ex","encode","search","handleChange","handleBlur","values","touched","isInvalid","errors","map","f","i","bind"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,CAAW;AACtBC,EAAAA,IAAI,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,CAAsB,iBAAtB,CADgB;AAEtBC,EAAAA,GAAG,EAAET,GAAG,CACLO,MADE,GAEFC,QAFE,CAEO,iBAFP,EAGFE,OAHE,CAID,uFAJC,EAKD,aALC;AAFiB,CAAX,CAAf;;AAWA,SAASC,UAAT,OAAsC;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAClC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMyB,YAAY,GAAG,MAAMC,GAAN,IAAa;AAChC,UAAMC,OAAO,GAAG,MAAMf,MAAM,CAACgB,QAAP,CAAgBF,GAAhB,CAAtB;;AACA,QAAI,CAACC,OAAL,EAAc;AACZ;AACD;;AACDP,IAAAA,YAAY,CAACS,OAAb,CAAqBC,IAArB,CAA0BJ,GAA1B;AACAN,IAAAA,YAAY,CAACW,UAAb,CAAwBX,YAAY,CAACS,OAArC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAef,YAAY,CAACS,OAA5B,CAAhC;AACD,GARD;;AAUA,QAAMO,iBAAiB,GAAGnB,GAAG,IAAI;AAC7BG,IAAAA,YAAY,CAACgB,iBAAb,CAA+BnB,GAA/B;AACFO,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAHD;;AAKA,QAAMa,YAAY,GAAGC,KAAK,IAAI;AAC1BlB,IAAAA,YAAY,CAACS,OAAb,CAAqBU,MAArB,CAA4BD,KAA5B,EAAmC,CAAnC;AACFlB,IAAAA,YAAY,CAACW,UAAb,CAAwBX,YAAY,CAACS,OAArC;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAef,YAAY,CAACS,OAA5B,CAAhC;AACD,GAJD;;AAMA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACoB,WAAL,EAAkB;AAChB,UAAImB,UAAU,GAAG,EAAjB;;AACA,UAAI;AACFA,QAAAA,UAAU,GAAGN,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,SAArB,CAAX,CAAb;;AACA,YAAIC,KAAK,CAACC,OAAN,CAAcJ,UAAd,CAAJ,EAA+B;AAC7BpB,UAAAA,YAAY,CAACW,UAAb,CAAwBS,UAAxB;AACD;AACF,OALD,CAKE,OAAOK,EAAP,EAAW,CAAE;;AACfvB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAXQ,CAAT;;AAaA,MAAIC,gBAAJ,EAAsB;AACpB,wBACE,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,SAAQb,WAAW,CAACoC,MAAZ,CAAmB;AAAE7B,QAAAA,GAAG,EAAEG,YAAY,CAAC2B;AAApB,OAAnB,CAAiD;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAED,sBAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,gBAAgB,EAAEnC,MAA1B;AAAkC,MAAA,QAAQ,EAAEa,YAA5C;AAAA,gBACG;AAAA,YAAC;AACAA,UAAAA,YADA;AAEAuB,UAAAA,YAFA;AAGAC,UAAAA,UAHA;AAIAC,UAAAA,MAJA;AAKAC,UAAAA,OALA;AAMAC,UAAAA,SANA;AAOAC,UAAAA;AAPA,SAAD;AAAA,4BASC,QAAC,IAAD;AAAM,UAAA,UAAU,MAAhB;AAAiB,UAAA,QAAQ,EAAE5B,YAA3B;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAEnB,GAAhB;AAAqB,cAAA,EAAE,EAAC,IAAxB;AAA6B,cAAA,SAAS,EAAC,MAAvC;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,WAAW,EAAC,MAHd;AAIE,gBAAA,KAAK,EAAE4C,MAAM,CAACpC,IAAP,IAAe,EAJxB;AAKE,gBAAA,QAAQ,EAAEkC,YALZ;AAME,gBAAA,SAAS,EAAEG,OAAO,CAACrC,IAAR,IAAgBuC,MAAM,CAACvC;AANpC;AAAA;AAAA;AAAA;AAAA,sBAFF,eAUE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,gBAAA,IAAI,EAAC,SAA5B;AAAA,0BACGuC,MAAM,CAACvC;AADV;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAeE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,EAAE,EAAER,GAAhB;AAAqB,cAAA,EAAE,EAAC,IAAxB;AAA6B,cAAA,SAAS,EAAC,KAAvC;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,KAFP;AAGE,gBAAA,WAAW,EAAC,KAHd;AAIE,gBAAA,KAAK,EAAE4C,MAAM,CAACjC,GAAP,IAAc,EAJvB;AAKE,gBAAA,QAAQ,EAAE+B,YALZ;AAME,gBAAA,SAAS,EAAEG,OAAO,CAAClC,GAAR,IAAeoC,MAAM,CAACpC;AANnC;AAAA;AAAA;AAAA;AAAA,sBAFF,eAWE,QAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,gBAAA,IAAI,EAAC,SAA5B;AAAA,0BACGoC,MAAM,CAACpC;AADV;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAgCE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAgDE;AAAA;AAAA;AAAA;AAAA,YAhDF,EAiDGG,YAAY,CAACS,OAAb,CAAqByB,GAArB,CAAyB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClC,0BACE,QAAC,IAAD;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,YAAtB;AAAA,oBAAoCD,CAAC,CAACzC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE;AAAA,sBAAIyC,CAAC,CAACtC;AAAN;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,SADV;AAEE,YAAA,OAAO,EAAEmB,iBAAiB,CAACqB,IAAlB,CAAuB,IAAvB,EAA6BF,CAAC,CAACtC,GAA/B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAOY,GAPZ,eAQE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAEoB,YAAY,CAACoB,IAAb,CAAkB,IAAlB,EAAwBD,CAAxB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KAlBA,CAjDH;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAyED,C,CAEH;;;GAvHSrC,U;;KAAAA,U;AAwHT,qBAAejB,QAAQ,CAACiB,UAAD,CAAvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './/SearchPage.css'\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Formik } from \"formik\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport * as yup from \"yup\";\r\nimport { Redirect } from \"react-router-dom\";\r\nconst querystring = require(\"querystring\");\r\n\r\nconst schema = yup.object({\r\n    name: yup.string().required(\"URL is required\"),\r\n    url: yup\r\n      .string()\r\n      .required(\"URL is required\")\r\n      .matches(\r\n        /(https?:\\/\\/)?([\\w\\-])+\\.{1}([a-zA-Z]{2,63})([\\/\\w-]*)*\\/?\\??([^#\\n\\r]*)?#?([^\\n\\r]*)/,\r\n        \"Invalid URL\"\r\n      ),\r\n  });\r\n  \r\nfunction SearchPage({ searchsStore }) {\r\n    const [initialized, setInitialized] = useState(false);\r\n    const [redirectToSearch, setRedirectToSearch] = useState(false);\r\n  \r\n    const handleSubmit = async evt => {\r\n      const isValid = await schema.validate(evt);\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n      searchsStore.searchs.push(evt);\r\n      searchsStore.setSearchs(searchsStore.searchs);\r\n      localStorage.setItem(\"searchs\", JSON.stringify(searchsStore.searchs));\r\n    };\r\n  \r\n    const setSelectedSearch = url => {\r\n        searchsStore.setSelectedSearch(url);\r\n      setRedirectToSearch(true);\r\n    };\r\n  \r\n    const deleteSearch = index => {\r\n        searchsStore.searchs.splice(index, 1);\r\n      searchsStore.setSearchs(searchsStore.searchs);\r\n      localStorage.setItem(\"searchs\", JSON.stringify(searchsStore.searchs));\r\n    };\r\n  \r\n    useEffect(() => {\r\n      if (!initialized) {\r\n        let rssSearchs = [];\r\n        try {\r\n          rssSearchs = JSON.parse(localStorage.getItem(\"searchs\"));\r\n          if (Array.isArray(rssSearchs)) {\r\n            searchsStore.setSearchs(rssSearchs);\r\n          }\r\n        } catch (ex) {}\r\n        setInitialized(true);\r\n      }\r\n    });\r\n  \r\n    if (redirectToSearch) {\r\n      return (\r\n        <Redirect to={`/feed?${querystring.encode({ url: searchsStore.search })}`} />\r\n      );\r\n    }\r\n  \r\n    return (\r\n\r\n    \r\n      <div className=\"search-page\">\r\n        <h1 className=\"center\">RSS Feed</h1>\r\n        <Formik validationSchema={schema} onSubmit={handleSubmit}>\r\n          {({\r\n            handleSubmit,\r\n            handleChange,\r\n            handleBlur,\r\n            values,\r\n            touched,\r\n            isInvalid,\r\n            errors,\r\n          }) => (\r\n            <Form noValidate onSubmit={handleSubmit}>\r\n              <Form.Row>\r\n                <Form.Group as={Col} md=\"12\" controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={values.name || \"\"}\r\n                    onChange={handleChange}\r\n                    isInvalid={touched.name && errors.name}\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.name}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group as={Col} md=\"12\" controlId=\"url\">\r\n                  <Form.Label>URL</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"url\"\r\n                    placeholder=\"URL\"\r\n                    value={values.url || \"\"}\r\n                    onChange={handleChange}\r\n                    isInvalid={touched.url && errors.url}\r\n                  />\r\n  \r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    {errors.url}\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form.Row>\r\n              <Button type=\"submit\">Add</Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <br />\r\n        {searchsStore.searchs.map((f, i) => {\r\n          return (\r\n            <Card key={i}>\r\n              <Card.Title className=\"card-title\">{f.name}</Card.Title>\r\n              <Card.Body>\r\n                <p>{f.url}</p>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={setSelectedSearch.bind(this, f.url)}\r\n                >\r\n                  Open\r\n                </Button>{\" \"}\r\n                <Button variant=\"primary\" onClick={deleteSearch.bind(this, i)}>\r\n                  Delete\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n//export default SearchPage;\r\nexport default observer(SearchPage);"]},"metadata":{},"sourceType":"module"}