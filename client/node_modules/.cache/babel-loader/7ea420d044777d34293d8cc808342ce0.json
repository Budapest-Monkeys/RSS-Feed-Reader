{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flor Hernandez\\\\RSS-Feed-Reader\\\\client\\\\src\\\\Pages\\\\Lectures.js\",\n    _s = $RefreshSig$();\n\n//UCYmET81J6olojeOvXsi_n8g\nimport './/Lectures.css';\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { parseDate } from \"../contexts/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst youtubeRssFeed = \"https://api.rss2json.com/v1/api.json?rss_url=https://youtube.com/feeds/videos.xml?channel_id=UCYmET81J6olojeOvXsi_n8g\";\n\nconst Lectures = () => {\n  _s();\n\n  const MAX_VIDEOS = 10;\n  const [videos, setVideos] = useState();\n  useEffect(() => {\n    const loadVideos = async () => {\n      fetch(youtubeRssFeed, {\n        headers: {\n          Accept: \"application/json\"\n        }\n      }).then(res => res.json()).then(data => data.items.filter(item => item.title.length > 0)).then(newVideos => newVideos.slice(0, MAX_VIDEOS)).then(videos => setVideos(videos)).catch(error => console.log(error));\n    };\n\n    loadVideos();\n  }, [MAX_VIDEOS]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    maxWidth: \"sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Latest Videos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), videos ? videos.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"link\",\n      href: item.link,\n      target: \"_blank\",\n      rel: \"nofollow noopener noreferrer\",\n      title: item.title,\n      \"aria-label\": item.link,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          image: item.thumbnail,\n          title: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: parseDate(item.pubDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, item.link, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)) : \"no video shown\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lectures, \"W+KJeZHLTQVvRm7vugLsdY52sIQ=\");\n\n_c = Lectures;\nexport default Lectures;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lectures\");","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/Pages/Lectures.js"],"names":["React","useState","useEffect","Card","Button","parseDate","youtubeRssFeed","Lectures","MAX_VIDEOS","videos","setVideos","loadVideos","fetch","headers","Accept","then","res","json","data","items","filter","item","title","length","newVideos","slice","catch","error","console","log","map","link","thumbnail","pubDate"],"mappings":";;;AAAA;AAGA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAGA,MAAMC,cAAc,GAClB,uHADF;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,UAAU,GAAG,EAAnB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAC7BC,MAAAA,KAAK,CAACN,cAAD,EAAiB;AAAEO,QAAAA,OAAO,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV;AAAX,OAAjB,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUA,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAoB,CAAhD,CAFlB,EAGGR,IAHH,CAGSS,SAAD,IAAeA,SAAS,CAACC,KAAV,CAAgB,CAAhB,EAAmBjB,UAAnB,CAHvB,EAIGO,IAJH,CAISN,MAAD,IAAYC,SAAS,CAACD,MAAD,CAJ7B,EAKGiB,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALpB;AAMD,KAPD;;AASAhB,IAAAA,UAAU;AACX,GAXQ,EAWN,CAACH,UAAD,CAXM,CAAT;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,IAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGC,MAAM,GACHA,MAAM,CAACqB,GAAP,CAAYT,IAAD,iBACT;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,IAAI,EAAEA,IAAI,CAACU,IAFb;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,8BAJN;AAKE,MAAA,KAAK,EAAEV,IAAI,CAACC,KALd;AAME,oBAAYD,IAAI,CAACU,IANnB;AAAA,6BASE,QAAC,IAAD;AAAA,gCAEI,QAAC,IAAD;AACE,UAAA,KAAK,EAAEV,IAAI,CAACW,SADd;AAEE,UAAA,KAAK,EAAEX,IAAI,CAACC;AAFd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOM,QAAC,IAAD;AAAM,UAAA,YAAY,MAAlB;AAAmB,UAAA,OAAO,EAAC,IAA3B;AAAgC,UAAA,SAAS,EAAC,IAA1C;AAAA,oBACGD,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,gBAPN,eAUM,QAAC,IAAD;AACE,UAAA,OAAO,EAAC,OADV;AAEE,UAAA,KAAK,EAAC,eAFR;AAGE,UAAA,SAAS,EAAC,GAHZ;AAAA,oBAKGjB,SAAS,CAACgB,IAAI,CAACY,OAAN;AALZ;AAAA;AAAA;AAAA;AAAA,gBAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AATF,OAOOZ,IAAI,CAACU,IAPZ;AAAA;AAAA;AAAA;AAAA,YADF,CADG,GAiCH,gBApCN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA3DD;;GAAMxB,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["//UCYmET81J6olojeOvXsi_n8g\r\n\r\n\r\nimport './/Lectures.css'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { parseDate } from \"../contexts/utils\";\r\n\r\n\r\nconst youtubeRssFeed =\r\n  \"https://api.rss2json.com/v1/api.json?rss_url=https://youtube.com/feeds/videos.xml?channel_id=UCYmET81J6olojeOvXsi_n8g\";\r\n\r\n\r\n\r\nconst Lectures = () => {\r\n  const MAX_VIDEOS = 10;\r\n\r\n  const [videos, setVideos] = useState();\r\n\r\n  useEffect(() => {\r\n    const loadVideos = async () => {\r\n      fetch(youtubeRssFeed, { headers: { Accept: \"application/json\" } })\r\n        .then((res) => res.json())\r\n        .then((data) => data.items.filter((item) => item.title.length > 0))\r\n        .then((newVideos) => newVideos.slice(0, MAX_VIDEOS))\r\n        .then((videos) => setVideos(videos))\r\n        .catch((error) => console.log(error));\r\n    };\r\n\r\n    loadVideos();\r\n  }, [MAX_VIDEOS]);\r\n\r\n  return (\r\n    <Card maxWidth=\"sm\">\r\n      <h2 className=\"heading\">Latest Videos</h2>\r\n\r\n      {videos\r\n        ? videos.map((item) => (\r\n            <a\r\n              className=\"link\"\r\n              href={item.link}\r\n              target=\"_blank\"\r\n              rel=\"nofollow noopener noreferrer\"\r\n              title={item.title}\r\n              aria-label={item.link}\r\n              key={item.link}\r\n            >\r\n              <Card >\r\n                \r\n                  <Card\r\n                    image={item.thumbnail}\r\n                    title={item.title}\r\n                  />\r\n                  \r\n                    <Card gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {item.title}\r\n                    </Card>\r\n                    <Card\r\n                      variant=\"body2\"\r\n                      color=\"textSecondary\"\r\n                      component=\"p\"\r\n                    >\r\n                      {parseDate(item.pubDate)}\r\n                    \r\n                  \r\n                </Card>\r\n              </Card>\r\n            </a>\r\n          ))\r\n        : \"no video shown\"}\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Lectures;\r\n"]},"metadata":{},"sourceType":"module"}