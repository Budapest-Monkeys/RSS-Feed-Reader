{"ast":null,"code":"export const slugify = name => {\n  const nameList = [];\n\n  for (let i = 0; i < name.length; i++) {\n    let ch = name[i];\n\n    if (ch !== \" \") {\n      nameList.push(ch.toLowerCase());\n    }\n  }\n\n  return nameList.join(\"\");\n};\nexport const slugifyTitle = name => {\n  const nameList = [];\n\n  for (let i = 0; i < name.length; i++) {\n    let ch = name[i];\n\n    if (ch !== \" \" && ch !== \")\" && ch !== \"(\" && ch !== \"!\" && ch !== \"/\" && ch !== \"]\" && ch !== \"|\" && ch !== \"+\" && ch !== \"?\" && ch !== \",\" && ch !== \"[\") {\n      nameList.push(ch.toLowerCase());\n    } else if (ch === \" \") {\n      nameList.push(\"_\");\n    }\n  }\n\n  return nameList.join(\"\").replace(\"&amp;\", \"\");\n};\nexport const timeSince = timestamp => {\n  const seconds = Math.floor((new Date() - new Date(timestamp)) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + \" years\";\n  }\n\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return interval + \" months\";\n  }\n\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return interval + \" days\";\n  }\n\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return interval + \" hours\";\n  }\n\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return interval + \" minutes\";\n  }\n\n  return Math.floor(seconds) + \" seconds\";\n};\nexport const getRedditImg = description => {\n  const imgRegex = /(https?:\\/\\/i\\.redd\\.it.*\\.(?:png|jpg|gif))/;\n  const match = description.match(imgRegex);\n  const redditImg = match && match.length && match[0];\n  return redditImg;\n};\nexport const getTwitterImg = description => {\n  const imgRegex = /(https?:\\/\\/pbs\\.twimg\\.com.*\\.(?:png|jpg|gif))/;\n  const match = description.match(imgRegex);\n  const twitterImg = match && match.length && match[0];\n  return twitterImg;\n};\nexport const getYtId = guid => guid.split(\":\")[2];\nexport const shuffle = arr => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n\n  return arr;\n};","map":{"version":3,"sources":["C:/Users/Flor Hernandez/RSS-Feed-Reader/client/src/utils/slugify.js"],"names":["slugify","name","nameList","i","length","ch","push","toLowerCase","join","slugifyTitle","replace","timeSince","timestamp","seconds","Math","floor","Date","interval","getRedditImg","description","imgRegex","match","redditImg","getTwitterImg","twitterImg","getYtId","guid","split","shuffle","arr","j","random"],"mappings":"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","sourcesContent":["export const slugify = (name) => {\r\n    const nameList = [];\r\n  \r\n    for (let i = 0; i < name.length; i++) {\r\n      let ch = name[i];\r\n      if (ch !== \" \") {\r\n        nameList.push(ch.toLowerCase());\r\n      }\r\n    }\r\n  \r\n    return nameList.join(\"\");\r\n  };\r\n  \r\n  export const slugifyTitle = (name) => {\r\n    const nameList = [];\r\n  \r\n    for (let i = 0; i < name.length; i++) {\r\n      let ch = name[i];\r\n  \r\n      if (\r\n        ch !== \" \" &&\r\n        ch !== \")\" &&\r\n        ch !== \"(\" &&\r\n        ch !== \"!\" &&\r\n        ch !== \"/\" &&\r\n        ch !== \"]\" &&\r\n        ch !== \"|\" &&\r\n        ch !== \"+\" &&\r\n        ch !== \"?\" &&\r\n        ch !== \",\" &&\r\n        ch !== \"[\"\r\n      ) {\r\n        nameList.push(ch.toLowerCase());\r\n      } else if (ch === \" \") {\r\n        nameList.push(\"_\");\r\n      }\r\n    }\r\n  \r\n    return nameList.join(\"\").replace(\"&amp;\", \"\");\r\n  };\r\n  \r\n  export const timeSince = (timestamp) => {\r\n    const seconds = Math.floor((new Date() - new Date(timestamp)) / 1000);\r\n  \r\n    let interval = Math.floor(seconds / 31536000);\r\n  \r\n    if (interval > 1) {\r\n      return interval + \" years\";\r\n    }\r\n  \r\n    interval = Math.floor(seconds / 2592000);\r\n    if (interval > 1) {\r\n      return interval + \" months\";\r\n    }\r\n  \r\n    interval = Math.floor(seconds / 86400);\r\n    if (interval > 1) {\r\n      return interval + \" days\";\r\n    }\r\n  \r\n    interval = Math.floor(seconds / 3600);\r\n    if (interval > 1) {\r\n      return interval + \" hours\";\r\n    }\r\n  \r\n    interval = Math.floor(seconds / 60);\r\n    if (interval > 1) {\r\n      return interval + \" minutes\";\r\n    }\r\n  \r\n    return Math.floor(seconds) + \" seconds\";\r\n  };\r\n  \r\n  export const getRedditImg = (description) => {\r\n    const imgRegex = /(https?:\\/\\/i\\.redd\\.it.*\\.(?:png|jpg|gif))/;\r\n    const match = description.match(imgRegex);\r\n    const redditImg = match && match.length && match[0];\r\n  \r\n    return redditImg;\r\n  };\r\n  \r\n  export const getTwitterImg = (description) => {\r\n    const imgRegex = /(https?:\\/\\/pbs\\.twimg\\.com.*\\.(?:png|jpg|gif))/;\r\n    const match = description.match(imgRegex);\r\n    const twitterImg = match && match.length && match[0];\r\n  \r\n    return twitterImg;\r\n  };\r\n  \r\n  export const getYtId = (guid) => guid.split(\":\")[2];\r\n  \r\n  export const shuffle = (arr) => {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n  };"]},"metadata":{},"sourceType":"module"}